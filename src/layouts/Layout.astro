---
import "../styles/index.scss";
import Navbar from "../components/navbar/Navbar.astro";
import Loader from "../components/Loader.astro";
import { SITE_TITLE } from "../consts";
import AboutImage from "../assets/mikolaj_madejski.jpg";

interface Props {
  title?: string;
  description: string;
  image?: string;
  navbar?: boolean;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title = SITE_TITLE, description, image = AboutImage } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <!-- Global Metadata -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <link rel="icon" type="image/svg+xml" href="/assets/icons/favicon.svg" />
    <link rel="icon" href="/path/to/favicon.ico" />
    <meta name="generator" content={Astro.generator} />

    <!-- Font preloads -->
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      rel="preload"
      href="https://fonts.googleapis.com/css2?family=Archivo:wght@300;400;700&family=Chakra+Petch:wght@300;400;600;700&display=swap"
      as="font"
      crossorigin
    />

    <link rel="canonical" href={canonicalURL} />
    <meta name="title" content={title} />
    <meta name="description" content={description} />

    <title>{title}</title>
    <!-- <ViewTransitions /> -->

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <!-- <meta property="og:image" content={new URL(image, Astro.url)} /> -->

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <!-- <meta property="twitter:image" content={new URL(image, Astro.url)} /> -->
  </head>
  <body data-barba="wrapper" class="loading">
    <Loader />
    <div class="cursor"></div>

    <Navbar />
    <slot />

    <script>
      import useCursor from "../scripts/Cursor";
      import useHref from "../scripts/HandleHref";
      import useBarba from "../scripts/Barba";
      import useImageVideoSwitch from "../scripts/ImageVideoSwitch";
      import useHeroImage from "../scripts/HeroImage";
      import useProjectList from "../scripts/ProjectList";
      import { playOnVisible } from "../scripts/utils/playOnVisible";

      const {
        barba,
        barbaInit,
        before: barbaBefore,
        after: barbaAfter,
      } = useBarba();

      const { initHref } = useHref();
      const { initCursor } = useCursor();
      const { lottieAnimationsInit } = useHeroImage();

      barbaInit();

      barbaBefore(() => {
        barba.wrapper.classList.add("is-animating");
        useProjectList();
        window.scrollTo({
          top: 0,
          left: 0,
          behavior: "smooth",
        });
        lottieAnimationsInit();
      });
      barbaAfter(() => {
        barba.wrapper.classList.remove("is-animating");
        initHref();
        useImageVideoSwitch();
        playOnVisible();
      });

      initHref();
      useImageVideoSwitch();
      lottieAnimationsInit();
      useProjectList();

      playOnVisible();

      initCursor();
    </script>
  </body>
</html>
